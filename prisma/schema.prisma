// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "./prisma-clients"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  nickName     String    @unique
  password     String    @db.Text
  introduction String?   @db.Text
  deletedAt    DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  // 관계
  posts        Post[]
  comments     Comment[]

  @@map("users")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  slug      String    @unique
  published Boolean   @default(false)
  views     Int       @default(0)
  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // 관계
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]

  @@index([authorId])
  @@map("posts")
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // 관계
  postId    Int
  post      Post      @relation(fields: [postId], references: [id])
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])

  @@index([postId])
  @@index([authorId])
  @@map("comments")
}
